[
  {
    "nodes": [
      {
        "parameters": {
          "cronExpression": "0 7 * * *"
        },
        "name": "Cron",
        "type": "n8n-nodes-base.cron",
        "typeVersion": 1,
        "position": [100, 200]
      },
      {
        "parameters": {
          "values": {
            "string": [
              { "name": "servers", "value": "[{\"hostname\":\"server1\",\"ip\":\"192.168.1.10\",\"ssh_user\":\"admin\",\"ssh_key\":\"your_ssh_private_key\"}]" }
            ]
          }
        },
        "name": "Set Servers",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [300, 200]
      },
      {
        "parameters": {
          "fieldToSplitOut": "servers"
        },
        "name": "SplitInBatches",
        "type": "n8n-nodes-base.splitInBatches",
        "typeVersion": 1,
        "position": [500, 200]
      },
      {
        "parameters": {
          "command": "echo \"HOST: $(hostname)\"; uptime; free -m; df -hT",
          "sshAuthentication": "privateKey",
          "user": "={{$json[\"ssh_user\"]}}",
          "privateKey": "={{$json[\"ssh_key\"]}}",
          "host": "={{$json[\"ip\"]}}"
        },
        "name": "SSH Check",
        "type": "n8n-nodes-base.ssh",
        "typeVersion": 1,
        "position": [700, 200]
      },
      {
        "parameters": {
          "functionCode": "// Parse output, set problem flag if above thresholds\nconst output = $json[\"stdout\"];\nlet problem = false;\nlet issue = \"\";\n// Parse output and check thresholds here\n// Example: if (cpuLoad > 2) { problem = true; issue += 'High CPU'; }\nreturn { problem, issue, details: output };"
        },
        "name": "Parse & Check",
        "type": "n8n-nodes-base.function",
        "typeVersion": 1,
        "position": [900, 200]
      },
      {
        "parameters": {
          "conditions": {
            "boolean": [
              { "value1": "={{$json[\"problem\"]}}", "value2": true }
            ]
          }
        },
        "name": "IF Issue",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [1100, 200]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "INSERT INTO server_issues (hostname, ip, issue, details) VALUES ({{$json[\"hostname\"]}}, {{$json[\"ip\"]}}, {{$json[\"issue\"]}}, {{$json[\"details\"]}});"
        },
        "name": "SQLite Store",
        "type": "n8n-nodes-base.sqlite",
        "typeVersion": 1,
        "position": [1300, 200]
      }
    ],
    "connections": {
      "Cron": { "main": [ [ { "node": "Set Servers", "type": "main", "index": 0 } ] ] },
      "Set Servers": { "main": [ [ { "node": "SplitInBatches", "type": "main", "index": 0 } ] ] },
      "SplitInBatches": { "main": [ [ { "node": "SSH Check", "type": "main", "index": 0 } ] ] },
      "SSH Check": { "main": [ [ { "node": "Parse & Check", "type": "main", "index": 0 } ] ] },
      "Parse & Check": { "main": [ [ { "node": "IF Issue", "type": "main", "index": 0 } ] ] },
      "IF Issue": { "main": [ [ { "node": "SQLite Store", "type": "main", "index": 0 } ] ] }
    }
  }
]